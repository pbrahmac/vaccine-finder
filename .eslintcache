
[{"/Users/raghavsreeram/Desktop/vaccine-finder/src/App.js":"1","/Users/raghavsreeram/Desktop/vaccine-finder/src/components/MapMaster.js":"2","/Users/raghavsreeram/Desktop/vaccine-finder/src/components/CardColumn.js":"3","/Users/raghavsreeram/Desktop/vaccine-finder/src/components/NewLocModal.js":"4","/Users/raghavsreeram/Desktop/vaccine-finder/src/utils/customHooks/useGeoPosition.js":"5","/Users/raghavsreeram/Desktop/vaccine-finder/src/components/LocationCard.js":"6","/Users/raghavsreeram/Desktop/vaccine-finder/src/components/HeaderBox.js":"7","/Users/raghavsreeram/Desktop/vaccine-finder/src/reportWebVitals.js":"8","/Users/raghavsreeram/Desktop/vaccine-finder/src/components/VaccineMap.js":"9"},{"size":944,"mtime":1610934694773,"results":"10","hashOfConfig":"11"},{"size":964,"mtime":1610929585948,"results":"12","hashOfConfig":"11"},{"size":1444,"mtime":1610934881463,"results":"13","hashOfConfig":"11"},{"size":17672,"mtime":1610925409818,"results":"14","hashOfConfig":"11"},{"size":1045,"mtime":1610925409821,"results":"15","hashOfConfig":"11"},{"size":1845,"mtime":1610933007153,"results":"16","hashOfConfig":"11"},{"size":1015,"mtime":1610935105380,"results":"17","hashOfConfig":"11"},{"size":362,"mtime":1610925409820,"results":"18","hashOfConfig":"11"},{"size":2353,"mtime":1610925409819,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"kcmhcn",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/raghavsreeram/Desktop/vaccine-finder/src/App.js",["42","43","44"],"/Users/raghavsreeram/Desktop/vaccine-finder/src/components/MapMaster.js",[],"/Users/raghavsreeram/Desktop/vaccine-finder/src/components/CardColumn.js",["45"],"/Users/raghavsreeram/Desktop/vaccine-finder/src/components/NewLocModal.js",["46","47","48"],"import React, { useContext, useState } from 'react'\nimport { FirebaseContext } from \"../utils/firebase\";\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport useGeoPosition from \"../utils/customHooks/useGeoPosition\";\nimport SignIn from './SignIn';\nimport { comment } from 'postcss';\n\nconst ExitIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n    )\n}\n\nconst NewLocModal = () => {\n    const firebase = useContext(FirebaseContext)\n    const auth = firebase.auth()\n    const firestore = firebase.firestore()\n\n    const locationsRef = firestore.collection('locations')\n\n    const [user] = useAuthState(auth)\n    const [showModal, setShowModal] = useState(false)\n\n    const [name, setName] = useState(\"\")\n    const [location, setLocation] = useState(\"\")\n    const [zipCode, setZipCode] = useState(\"\")\n    const [county, setCounty] = useState(\"\")\n    const [website, setWebsite] = useState(\"\")\n    const [contact, setContact] = useState(\"\")\n    const [radioOption, setRadioOption] = useState(\"\")\n    const [notes, setNotes] = useState(\"\")\n\n    //get coords\n    const [position, loading, error] = useGeoPosition(`${process.env.REACT_APP_MAPS_API_KEY}`, location)\n    \n    const formSubmit = async (e) => {\n        e.preventDefault()\n        console.log(name, location, zipCode, county, website, radioOption, notes)\n\n        // Write to firebase here\n        const newDoc = await locationsRef.add({\n            contact: contact,\n            coords: position,\n            county: county,\n            lastUpdatedDate: new Date(),\n            locAddress: location,\n            locName: name,\n            status: radioOption,\n            zipcode: zipCode\n        })\n\n        const commentsRef = locationsRef.doc(newDoc.id).collection('comments')\n        await commentsRef.add({\n            comment: notes,\n            commentDate: new Date()\n        })\n\n        // reset form fields\n        setName(\"\")\n        setLocation(\"\")\n        setZipCode(\"\")\n        setCounty(\"\")\n        setWebsite(\"\")\n        setContact(\"\")\n        setRadioOption(\"\")\n        setNotes(\"\")\n        // unshow the modal\n        setShowModal(false)\n    }\n    \n    return (\n        <div>\n            <button\n                className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\n                type=\"button\"\n                style={{ transition: \"all .15s ease\" }}\n                onClick={() => setShowModal(true)}\n            >\n                Add a Location\n            </button>\n            {showModal ? (\n                <>\n                <div\n                    className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n                >\n                    <div className=\"relative w-auto my-6 mx-auto max-w-6xl\">\n                    {/*content*/}\n                        <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                            {/*header*/}\n                            <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\n                            <h3 className=\"text-3xl font-semibold\">\n                                Add a Location\n                            </h3>\n                            <button\n                                className=\"p-1 ml-auto bg-transparent border-0 text-black float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                                onClick={() => setShowModal(false)}\n                            >\n                                <span className=\"bg-transparent align-middle text-black h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                                    <ExitIcon />\n                                </span>\n                            </button>\n                            </div>\n                            {/*body*/}\n                            {user ? (\n                                    <div className=\"relative flex-auto bg-gray-50\">\n                                        <form onSubmit={formSubmit}>\n                                            <div className=\"grid grid-cols-4 gap-4 space-y-3 p-6\">\n                                                <div className=\"col-span-4\">\n                                                    <input \n                                                        type=\"text\"\n                                                        placeholder=\"Location Name\"\n                                                        value={name}\n                                                        onChange={(e) => setName(e.target.value)}\n                                                        className=\"px-3 py-3 placeholder-gray-400 text-gray-700 relative bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline w-full\" />\n                                                </div>\n                                                <div className=\"col-span-2\">\n                                                    <input \n                                                        type=\"text\"\n                                                        placeholder=\"Location Address\"\n                                                        value={location}\n                                                        onChange={(e) => setLocation(e.target.value)}\n                                                        className=\"px-3 py-3 placeholder-gray-400 text-gray-700 relative bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline w-full\" />\n                                                </div>\n                                                <div className=\"col-span-1\">\n                                                    <input \n                                                        type=\"text\"\n                                                        placeholder=\"Zip Code\"\n                                                        value={zipCode}\n                                                        onChange={(e) => setZipCode(e.target.value)}\n                                                        className=\"px-3 py-3 placeholder-gray-400 text-gray-700 relative bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline w-full\" />\n                                                </div>\n                                                <div className=\"col-span-1\">\n                                                    <input \n                                                        type=\"text\"\n                                                        placeholder=\"County\"\n                                                        value={county}\n                                                        onChange={(e) => setCounty(e.target.value)}\n                                                        className=\"px-3 py-3 placeholder-gray-400 text-gray-700 relative bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline w-full\" />\n                                                </div>\n                                                <div className=\"relative flex w-full flex-wrap items-stretch mb-3 col-span-3\">\n                                                    <span className=\"z-10 h-full leading-snug font-normal text-center text-gray-400 absolute bg-transparent rounded text-base items-center justify-center w-8 pl-3 py-3\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9\" />\n                                                        </svg>\n                                                    </span>\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Link to Website About Location / Vaccine Info\"\n                                                        value={website}\n                                                        onChange={(e) => setWebsite(e.target.value)}\n                                                        className=\"px-3 py-3 placeholder-gray-400 text-gray-700 relative bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline w-full pl-10\" />\n                                                </div>\n                                                <div className=\"relative flex w-full flex-wrap items-stretch mb-3 col-span-1\">\n                                                    <span className=\"z-10 h-full leading-snug font-normal text-center text-gray-400 absolute bg-transparent rounded text-base items-center justify-center w-8 pl-3 py-3\">\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\n                                                    </svg>\n                                                    </span>\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Contact Number\"\n                                                        value={contact}\n                                                        onChange={(e) => setContact(e.target.value)}\n                                                        className=\"px-3 py-3 placeholder-gray-400 text-gray-700 relative bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline w-full pl-10\" />\n                                                </div>\n                                                <div className=\"col-start-2 col-span-2 w-full text-center\">\n                                                    <label className=\"ml-2 mr-6 text-gray-700 align-middle\">\n                                                        <input\n                                                            type=\"radio\"\n                                                            value=\"available\"\n                                                            className=\"px-3 mr-2 placeholder-gray-400 text-green-500 bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline\"\n                                                            checked={radioOption === \"available\"}\n                                                            onChange={(e) => setRadioOption(e.target.value)}\n                                                        />\n                                                        Available\n                                                    </label>\n                                                    <label className=\"ml-2 mr-6 text-gray-700 align-middle\">\n                                                        <input\n                                                            type=\"radio\"\n                                                            value=\"unavailable\"\n                                                            className=\"px-3 mr-2 placeholder-gray-400 text-red-500 bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline\"\n                                                            checked={radioOption === \"unavailable\"}\n                                                            onChange={(e) => setRadioOption(e.target.value)}\n                                                        />\n                                                        Unavailable\n                                                    </label>\n                                                    <label className=\"ml-2 mr-6 text-gray-700 align-middle\">\n                                                        <input\n                                                            type=\"radio\"\n                                                            value=\"coming_soon\"\n                                                            className=\"px-3 mr-2 placeholder-gray-400 text-yellow-500 bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline\"\n                                                            checked={radioOption === \"coming_soon\"}\n                                                            onChange={(e) => setRadioOption(e.target.value)}\n                                                        />\n                                                        Coming Soon\n                                                    </label>\n                                                </div>\n                                                <div className=\"col-start-2 col-span-2\">\n                                                    <textarea\n                                                        placeholder=\"Any other notes\"\n                                                        value={notes}\n                                                        onChange={(e) => setNotes(e.target.value)}\n                                                        className=\"px-3 py-3 resize-y placeholder-gray-400 text-gray-700 relative bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline w-full\" />\n                                                </div>\n                                            </div>\n                                            {/*footer*/}\n                                            <div className=\"flex items-center justify-end p-5 bg-white border-t border-solid border-gray-300 rounded-b\">\n                                                <button\n                                                    className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\n                                                    type=\"submit\"\n                                                    style={{ transition: \"all .15s ease\" }}\n                                                    onClick={() => setShowModal(false)}\n                                                >\n                                                    Close\n                                                </button>\n                                                <button\n                                                    className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\n                                                    type=\"submit\"\n                                                    style={{ transition: \"all .15s ease\" }}\n                                                >\n                                                    Save Changes\n                                                </button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                ) : (\n                                    <div>\n                                        <div className=\"grid grid-cols-3 grid-rows-3 relative p-6 flex-auto bg-gray-50\">\n                                            <div className=\"col-start-2 row-start-2\">\n                                                <SignIn isNavbar={false} />\n                                            </div>\n                                        </div>\n                                        {/*footer*/}\n                                        <div className=\"flex items-center justify-end p-5 border-t border-solid border-gray-300 rounded-b\">\n                                            <button\n                                                className=\"bg-red-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\n                                                type=\"button\"\n                                                style={{ transition: \"all .15s ease\" }}\n                                                onClick={() => setShowModal(false)}    \n                                            >\n                                                Close\n                                            </button>\n                                        </div>\n                                    </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n                </>\n            ) : null}\n        </div>\n    )\n}\n\nexport default NewLocModal\n",["49","50"],"/Users/raghavsreeram/Desktop/vaccine-finder/src/utils/customHooks/useGeoPosition.js",["51","52"],"import React, { useState, useEffect} from 'react'\nimport axios from 'axios';\n\nconst useGeoPosition = (key, address) => {\n    const [position, setPosition] = useState({ lat: null, lng: null });\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const fetchLatandLng = async () => {\n        try {\n            setLoading(true);\n            const res = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${address}&key=${key}`);\n            const result = res.data.results[0].geometry.location;\n\n            if (result.lat !== null && result.lng !== null) {\n                setPosition({lat: result.lat, lng: result.lng})\n            }\n            else {\n                setError(true);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            setError(true);\n        }\n    }\n\n\n    useEffect(() => {\n        fetchLatandLng();\n    }, [address])\n\n    return [position, loading, error]\n}\n\nexport default useGeoPosition;","/Users/raghavsreeram/Desktop/vaccine-finder/src/components/LocationCard.js",["53"],"import React from 'react'\n\nconst LocationCard = ({ location }) => {\n    \n    let boxStyle = \"rounded-md p-4 hover:shadow-lg bg-gray-50 grid\"\n   \n    let statusColor = \"text-sm text-center\"\n\n    let statusBoxColor = \"w-24 rounded border-2 \"\n\n    if (location.status === \"Available\") {\n        statusColor = statusColor.concat(\" text-green-500\")\n        statusBoxColor = statusBoxColor.concat(\" bg-green-200 border-green-400\")\n    } else {\n        statusColor = statusColor.concat(\" text-red-500\")\n        statusBoxColor = statusBoxColor.concat(\" bg-red-200 border-red-400\")\n    }\n\n\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    const lastUpdatedObj = location.lastUpdatedDate.toDate()\n    const numComments = location.numComments\n    const lastUpdated = monthNames[lastUpdatedObj.getMonth()].concat(' ', String(lastUpdatedObj.getDate()).padStart(2, '0'), ', ', lastUpdatedObj.getFullYear())\n    console.log(location)\n    return (\n        <div className={boxStyle}>\n\n            \n            <h1 className=\"text-base font-bold \">{location.locName}</h1>\n            <h3 className=\"text-sm\">{location.locAddress}</h3>\n            \n            <br/>\n\n\n            <div className={statusBoxColor}>\n                 <h5 className={statusColor}>{location.status}</h5>\n            </div>\n            \n\n            <div className='bg-yellow-100 text-sm rounded w-28 mt-2 pl-2 pr-2 justify-self-end text-gray-800 underline'>{location.numComments} New Reports</div>\n            <h5 className=\"text-xs text-right mt-2 text-gray-500\">Last updated {lastUpdated}</h5>\n            {/* <button className=\"rounded bg-gradient-to-r from-blue-400 to-blue-500 text-sm p-1 text-white\">More Details ></button> */}\n        </div>\n    )\n}\n\nexport default LocationCard","/Users/raghavsreeram/Desktop/vaccine-finder/src/components/HeaderBox.js",["54"],"/Users/raghavsreeram/Desktop/vaccine-finder/src/reportWebVitals.js",[],"/Users/raghavsreeram/Desktop/vaccine-finder/src/components/VaccineMap.js",[],{"ruleId":"55","severity":1,"message":"56","line":1,"column":40,"nodeType":"57","messageId":"58","endLine":1,"endColumn":46},{"ruleId":"55","severity":1,"message":"59","line":1,"column":48,"nodeType":"57","messageId":"58","endLine":1,"endColumn":56},{"ruleId":"55","severity":1,"message":"60","line":14,"column":9,"nodeType":"57","messageId":"58","endLine":14,"endColumn":13},{"ruleId":"55","severity":1,"message":"61","line":8,"column":11,"nodeType":"57","messageId":"58","endLine":8,"endColumn":16},{"ruleId":"55","severity":1,"message":"62","line":9,"column":10,"nodeType":"57","messageId":"58","endLine":9,"endColumn":17},{"ruleId":"55","severity":1,"message":"63","line":39,"column":22,"nodeType":"57","messageId":"58","endLine":39,"endColumn":29},{"ruleId":"55","severity":1,"message":"64","line":39,"column":31,"nodeType":"57","messageId":"58","endLine":39,"endColumn":36},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"55","severity":1,"message":"69","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},{"ruleId":"70","severity":1,"message":"71","line":31,"column":8,"nodeType":"72","endLine":31,"endColumn":17,"suggestions":"73"},{"ruleId":"55","severity":1,"message":"74","line":22,"column":11,"nodeType":"57","messageId":"58","endLine":22,"endColumn":22},{"ruleId":"75","severity":1,"message":"76","line":3,"column":20,"nodeType":"77","messageId":"78","endLine":3,"endColumn":24},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'auth' is assigned a value but never used.","'fruit' is assigned a value but never used.","'comment' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchLatandLng'. Either include it or remove the dependency array.","ArrayExpression",["81"],"'numComments' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [address, fetchLatandLng]",{"range":"84","text":"85"},[962,971],"[address, fetchLatandLng]"]
